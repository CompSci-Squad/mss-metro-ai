name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync --no-dev

      - name: Run ruff check
        run: uv run ruff check app/ tests/

      - name: Run ruff format check
        run: uv run ruff format --check app/ tests/

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync

      - name: Run tests
        run: uv run pytest tests/ -v --tb=short

      - name: Generate coverage report
        run: uv run pytest tests/ --cov=app --cov-report=xml --cov-report=term

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v4
        if: github.event_name == 'pull_request'
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: mss-metro-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/image.tar

      - name: Load and inspect image
        run: |
          docker load --input /tmp/image.tar
          docker image inspect mss-metro-api:${{ github.sha }}
          echo "Image size:"
          docker image ls mss-metro-api:${{ github.sha }} --format "{{.Size}}"

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync

      - name: Run safety check
        run: |
          uv pip install safety
          uv run safety check --json || true

      - name: Run bandit security linter
        run: |
          uv pip install bandit
          uv run bandit -r app/ -f json || true

  validate:
    name: Validate CI
    runs-on: ubuntu-latest
    needs: [lint, test, docker-build, security]
    if: always()
    steps:
      - name: Check job results
        run: |
          if [ "${{ needs.lint.result }}" != "success" ]; then
            echo "Lint job failed"
            exit 1
          fi
          if [ "${{ needs.test.result }}" != "success" ]; then
            echo "Test job failed"
            exit 1
          fi
          if [ "${{ needs.docker-build.result }}" != "success" ]; then
            echo "Docker build job failed"
            exit 1
          fi
          echo "All required jobs passed!"
