[project]
name = "mss-metro-ai"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aioboto3>=15.2.0",
    "aiohttp>=3.10.0",
    "black>=25.9.0",
    "boto3>=1.40.18",
    "fastapi>=0.118.0",
    "httpx>=0.28.1",
    "mangum>=0.19.0",
    "pillow>=11.0.0",
    "pydantic>=2.11.10",
    "pydantic-settings>=2.11.0",
    "pymemcache>=4.0.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=0.24.0",
    "python-dotenv>=1.1.1",
    "python-multipart>=0.0.20",
    "python-ulid>=3.0.0",
    "ruff>=0.13.3",
    "structlog>=25.4.0",
    "tqdm>=4.67.1",
    "weaviate-client>=4.17.0",
]

[tool.ruff]
line-length = 120
target-version = "py312"
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "*.pyc",
    ".pytest_cache",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "RET", # flake8-return
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # function calls in argument defaults
    "RET504", # unnecessary variable assignment before return
]

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
